"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_express_1 = require("apollo-server-express");
exports.typeDefs = (0, apollo_server_express_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Query {\n    me: User!\n    getAllUsers: [User]!\n    getAllPosts: [Post]!\n    getUserById(id: String!): User\n    getPostById(data: GetByIdInput!): Post!\n  }\n\n  type Mutation {\n    addUser(data: AddUserInput!): LoginRes!\n    login(data: LoginInput!): LoginRes!\n    addPost(data: AddPostInput!): Post!\n    ratePost(data: RatePostInput!): Boolean!\n  }\n\n  type LoginRes {\n    token: String!\n  }\n\n  type User {\n    id: String!\n    firstName: String!\n    lastName: String!\n    email: String!\n    role: Role!\n    createDate: DateTime!\n    lastOnline: DateTime\n    writtenPosts: [Post]\n    likedPosts: [PostOnUserLikes]\n  }\n\n  type Post {\n    id: String!\n    title: String!\n    article: String!\n    createDate: DateTime!\n    author: User\n    authorId: String\n    likedBy: [PostOnUserLikes]\n  }\n\n  type PostOnUserLikes {\n    userId: String!\n    postId: String!\n    post: Post!\n    user: User!\n    assignedAt: DateTime!\n  }\n\n  input AddUserInput {\n    firstName: String!\n    lastName: String!\n    email: String!\n    password: String!\n  }\n\n  input LoginInput {\n    email: String!\n    password: String!\n  }\n\n  input AddPostInput {\n    title: String!\n    article: String!\n  }\n\n  input RatePostInput {\n    postId: String!\n  }\n\n  input GetByIdInput {\n    id: String!\n  }\n\n  scalar DateTime\n\n  enum Role {\n    USER\n    ADMIN\n    TESTER\n  }\n"], ["\n  type Query {\n    me: User!\n    getAllUsers: [User]!\n    getAllPosts: [Post]!\n    getUserById(id: String!): User\n    getPostById(data: GetByIdInput!): Post!\n  }\n\n  type Mutation {\n    addUser(data: AddUserInput!): LoginRes!\n    login(data: LoginInput!): LoginRes!\n    addPost(data: AddPostInput!): Post!\n    ratePost(data: RatePostInput!): Boolean!\n  }\n\n  type LoginRes {\n    token: String!\n  }\n\n  type User {\n    id: String!\n    firstName: String!\n    lastName: String!\n    email: String!\n    role: Role!\n    createDate: DateTime!\n    lastOnline: DateTime\n    writtenPosts: [Post]\n    likedPosts: [PostOnUserLikes]\n  }\n\n  type Post {\n    id: String!\n    title: String!\n    article: String!\n    createDate: DateTime!\n    author: User\n    authorId: String\n    likedBy: [PostOnUserLikes]\n  }\n\n  type PostOnUserLikes {\n    userId: String!\n    postId: String!\n    post: Post!\n    user: User!\n    assignedAt: DateTime!\n  }\n\n  input AddUserInput {\n    firstName: String!\n    lastName: String!\n    email: String!\n    password: String!\n  }\n\n  input LoginInput {\n    email: String!\n    password: String!\n  }\n\n  input AddPostInput {\n    title: String!\n    article: String!\n  }\n\n  input RatePostInput {\n    postId: String!\n  }\n\n  input GetByIdInput {\n    id: String!\n  }\n\n  scalar DateTime\n\n  enum Role {\n    USER\n    ADMIN\n    TESTER\n  }\n"])));
var templateObject_1;
//# sourceMappingURL=schema.js.map